[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "diff-ml"
dynamic = ["version"]
description = "Differential Machine Learning for Jax"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = [
    "jax",
    "differential-machine-learning",
    "neural-networks",
]
authors = [
  { name = "Neil Kichler", email = "neil.kichler@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "jax>=0.4.13", "jaxlib>=0.4.13", "equinox>=0.10.5", "jaxtyping>=0.2.20", "polars>=0.18.8"
]

[project.urls]
"Homepage" = "https://github.com/neil-kichler/pydiff_ml"
"Bug Tracker" = "https://github.com/neil-kichler/pydiff_ml/issues"
"Documentation" = "https://github.com/neil-kichler/pydiff_ml#readme"

[tool.hatch.version]
path = "diff_ml/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "pyright>=1.1.318",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "pyright {args:diff_ml tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py38"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py39"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "D",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Ignore spurious errors in type annotations using strings
  "F722",
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.pyright]
reportIncompatibleMethodOverride = true
include = ["diff_ml", "tests"]

[tool.ruff.isort]
known-first-party = ["diff-ml"]
# combine-as-imports = true
lines-after-imports = 2
extra-standard-library = ["typing_extensions"]
order-by-type = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["diff_ml", "tests"]
branch = true
parallel = true
omit = [
  "diff_ml/__about__.py",
]

[tool.coverage.paths]
diff_ml = ["diff_ml", "*/diff-ml/diff_ml"]
tests = ["tests", "*/diff-ml/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

